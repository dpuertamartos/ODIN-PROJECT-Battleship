(()=>{"use strict";const e=(e,o,n)=>{let t=!1;1===o&&(t=!0);let r=[];const s=()=>{t=!t};return{board:n,mode:e,position:o,play:(e,o)=>{o.board.receiveAttack(e),r.push(e),s(),o.swapTurn()},swapTurn:s,getTurn:()=>t}},o=()=>{let e=[],o=[],n=!1;return{missed:e,placedShips:o,add:e=>(o.push(e),"ship added to gameboard"),receiveAttack:n=>{const t=o.filter((e=>!0===function(e,o){let n=JSON.stringify(o);return e.some((function(e){return JSON.stringify(e)===n}))}(e.position,n)));return console.log(t.length),1===t.length?(t[0].createHit(n),t[0]):0===t.length?(e.push(n),null):void 0},checkGameOver:()=>{for(let e=0;e<o.length;e++)!0===o[e].isSunk()?(console.log("inside of game over",o[e].isSunk()),n=!0,console.log("gameover value",n)):(console.log("inside of game over false",o[e].isSunk()),n=!1);return n}}},n=o(),t=o(),r=e("player",1,n),s=e("computer",2,t);console.log(r.getTurn()),console.log(s.getTurn()),r.swapTurn(),console.log(r.getTurn())})();